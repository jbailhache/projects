
#6000H { Begin of program }

{hexadecimal digits}
h,[digits]W
{0123456789ABCDEF}

{coding of loading of R0}
h,[code_load_R0]W
{[code_load_R0_ret]W
#23_
#1C,[load_value]R>,#F&,[digits]R+r_
#18,[load_value]R>,#F&,[digits]R+r_
#14,[load_value]R>,#F&,[digits]R+r_
#10,[load_value]R>,#F&,[digits]R+r_
#C,[load_value]R>,#F&,[digits]R+r_
#8,[load_value]R>,#F&,[digits]R+r_
#4,[load_value]R>,#F&,[digits]R+r_
[load_value]R,#F&,[digits]R+r_
#,[code_load_R0_ret]R?}

{string to display, terminated by null}
h,[hello]W
{Hello World !
}#_

{display a string}
h,[display]W
{[display_ret]W
}h,[display_loop]W{
[display_ptr]Rr,
}h,[display_jmpadr]W{eeeeeeeee?
[display_ptr]RrP
[display_ptr]R,#1+,[display_ptr]W
#,}[display_loop]R,[load_value]W#,[code_load_R0]R?{?
}h,[display_end]W
[display_jmpadr]RH[display_end]R,[load_value]W#,[code_load_R0]R?
[display_end]RH{
#,[display_ret]R?}

{read a word}
h,[read_word]W
{[read_word_ret]W
}h,[read_word_loop]W{
G,[read_word_char]W
[read_word_char]R,#20-,}h,[read_word_jmpadr1]W{eeeeeeeee?
[read_word_char]R,#0A-,}h,[read_word_jmpadr2]W{eeeeeeeee?
[read_word_char]R,#0D-,}h,[read_word_jmpadr3]W{eeeeeeeee?
[read_word_char]R,[read_word_ptr]Rw,#1+,[read_word_ptr]W
#,}[read_word_loop]R,[load_value]W#,[code_load_R0]R?{?
}h,[read_word_end]W
[read_word_jmpadr1]RH[read_word_end]R,[load_value]W#,[code_load_R0]R?
[read_word_jmpadr2]RH[read_word_end]R,[load_value]W#,[code_load_R0]R?
[read_word_jmpadr3]RH[read_word_end]R,[load_value]W#,[code_load_R0]R?
[read_word_end]RH{
#,[read_word_ptr]Rw,#1+,[read_word_ptr]W
#,[read_word_ret]R?}

{copy string}
h,[strcpy]W
{[strcpy_ret]W
}h,[strcpy_loop]W{
[strcpy_src]Rr,[strcpy_dst]Rw
[strcpy_src]Rr,}h,[strcpy_jmpadr]W{eeeeeeeee?
[strcpy_src]R,#1+,[strcpy_src]W
[strcpy_dst]R,#1+,[strcpy_dst]W
#,}[strcpy_loop]R,[load_value]W#,[code_load_R0]R?{?
}h,[strcpy_end]W
[strcpy_jmpadr]RH[strcpy_end]R,[load_value]W#,[code_load_R0]R?
[strcpy_end]RH{
#,[strcpy_ret]R?}

{compare strings}
h,[strcmp]W
{[strcmp_ret]W
}h,[strcmp_loop]W{
[strcmp_ptr1]Rr,}h,[strcmp_jmpadr1]W{eeeeeeeee?
[strcmp_ptr2]Rr,}h,[strcmp_jmpadr2]W{eeeeeeeee?
[strcmp_ptr1]Rr,[strcmp_ptr2]Rr-,}h,[strcmp_jmpadr3]W{eeeeeeeee?
#1,[strcmp_result]W
#,}h,[strcmp_jmpadr4]W{eeeeeeeee?
}h,[strcmp_next]W
[strcmp_jmpadr3]RH[strcmp_next]R,[load_value]W#,[code_load_R0]R?
[strcmp_next]RH{
[strcmp_ptr1]R,#1+,[strcmp_ptr1]W
[strcmp_ptr2]R,#1+,[strcmp_ptr2]W
#,}[strcmp_loop]R,[load_value]W#,[code_load_R0]R?{?
}h,[strcmp_label2]W
[strcmp_jmpadr2]RH[strcmp_label2]R,[load_value]W#,[code_load_R0]R?
[strcmp_label2]RH{
#1,[strcmp_result]W
#,}h,[strcmp_jmpadr5]W{eeeeeeeee?
}h,[strcmp_label1]W
[strcmp_jmpadr1]RH[strcmp_label1]R,[load_value]W#,[code_load_R0]R?
[strcmp_label1]RH{
[strcmp_ptr2]Rr,}h,[strcmp_jmpadr6]W{eeeeeeeee?
#1,[strcmp_result]W
#,}h,[strcmp_jmpadr7]W{eeeeeeeee?
}h,[strcmp_label6]W
[strcmp_jmpadr6]RH[strcmp_label6]R,[load_value]W#,[code_load_R0]R?
[strcmp_label6]RH{
#,[strcmp_result]W
}h,[strcmp_end]W
[strcmp_jmpadr4]RH[strcmp_end]R,[load_value]W#,[code_load_R0]R?
[strcmp_jmpadr5]RH[strcmp_end]R,[load_value]W#,[code_load_R0]R?
[strcmp_jmpadr7]RH[strcmp_end]R,[load_value]W#,[code_load_R0]R?
[strcmp_end]RH{
#,[strcmp_ret]R?}

{find or create word in dictionary}
h,[search_dic]W
{[search_dic_ret]W
}h,[search_dic_loop]W{
[search_dic_ptr]RR,}h,[search_dic_jmpadr1]W{eeeeeeeee?
[search_dic_ptr]RR,[strcmp_ptr1]W
[search_dic_key]R,[strcmp_ptr2]W
#,[strcmp]R?
[strcmp_result]R,}h,[search_dic_jmpadr2]W{eeeeeeeee?
[search_dic_ptr]R,#8+,[search_dic_ptr]W
#,}[search_dic_loop]R,[load_value]W#,[code_load_R0]R?{?
}h,[search_dic_end]W
[search_dic_jmpadr1]RH[search_dic_end]R,[load_value]W#,[code_load_R0]R?
[search_dic_end]RH{
[search_dic_ptr]R,#4+R,[search_dic_ptr]RW
[search_dic_key]R,[strcpy_src]W
[search_dic_ptr]RR,[strcpy_dst]W
#,[strcpy]R?
[search_dic_ptr]R,#C+,[search_dic_adr]W
[strcpy_dst]R,#1+,[search_dic_adr]RW
[search_dic_ptr]R,#8+,[search_dic_adr]W
#,[search_dic_adr]RW
}h,[search_dic_found]W
[search_dic_jmpadr2]RH[search_dic_found]R,[load_value]W#,[code_load_R0]R?
[search_dic_found]RH{
#,[search_dic_ret]R?}

{initial dictionary at address 3000 hex}
#,#3000W
#4000,#3004W

{print hexadecimal}
h,[print_hex]W
{[print_hex_ret]W
#1C,[print_hex_nbr]R>,#F&,[digits]R+rP
#18,[print_hex_nbr]R>,#F&,[digits]R+rP
#14,[print_hex_nbr]R>,#F&,[digits]R+rP
#10,[print_hex_nbr]R>,#F&,[digits]R+rP
#C,[print_hex_nbr]R>,#F&,[digits]R+rP
#8,[print_hex_nbr]R>,#F&,[digits]R+rP
#4,[print_hex_nbr]R>,#F&,[digits]R+rP
[print_hex_nbr]R,#F&,[digits]R+rP
#,[print_hex_ret]R?}

h,[txt_equal]W
{strings are equal
}#_

h,[txt_diff]W
{strings are different
}#_

{main function}
h,[main]W
{[main_ret]W
#12345678,[print_hex_nbr]W
#,[print_hex]R?
[hello]R,[display_ptr]W
#,[display]R?
#2000,[read_word_ptr]W
#,[read_word]R?
#2000,[display_ptr]W
#,[display]R?
#2000,[strcpy_src]W
#2100,[strcpy_dst]W
#,[strcpy]R?
#2100,[display_ptr]W
#,[display]R?
#2200,[read_word_ptr]W
#,#[read_word]R?
#2000,[strcmp_ptr1]W
#2200,[strcmp_ptr2]W
#,[strcmp]R?
[strcmp_result]R,}h,[main_jmpadr1]W{eeeeeeeee?
[txt_diff]R,[display_ptr]W
#,[display]R?
#,}h,[main_jmpadr2]W{eeeeeeeee?
}h,[main_equal]W
[main_jmpadr1]RH[main_equal]R,[load_value]W#,[code_load_R0]R?
[main_equal]RH{
[txt_equal]R,[display_ptr]W
#,[display]R?
}h,[main_endcmp]W
[main_jmpadr2]RH[main_endcmp]R,[load_value]W#,[code_load_R0]R?
[main_endcmp]RH{
#2300,[read_word_ptr]W
#,#[read_word]R?
#3000,[search_dic_ptr]W
#2300,[search_dic_key]W
#,[search_dic]R?
[search_dic_ptr]R,[print_hex_nbr]W
#,[print_hex]R?
#2400,[read_word_ptr]W
#,#[read_word]R?
#3000,[search_dic_ptr]W
#2400,[search_dic_key]W
#,[search_dic]R?
[search_dic_ptr]R,[print_hex_nbr]W
#,[print_hex]R?
#,[main_ret]R?}

{call main function}
#,[main]R?
Q
[ZERO*1400]

#6000H { Begin of program }

{hexadecimal digits}
h,[digits]W
{0123456789ABCDEF}

{coding of loading of R0}
h,[code_load_R0]W
{[code_load_R0_ret]W
#23_
#1C,[load_value]R>,#F&,[digits]R+r_
#18,[load_value]R>,#F&,[digits]R+r_
#14,[load_value]R>,#F&,[digits]R+r_
#10,[load_value]R>,#F&,[digits]R+r_
#C,[load_value]R>,#F&,[digits]R+r_
#8,[load_value]R>,#F&,[digits]R+r_
#4,[load_value]R>,#F&,[digits]R+r_
[load_value]R,#F&,[digits]R+r_
#,[code_load_R0_ret]R?}

{string to display, terminated by null}
h,[hello]W
{Hello World !
}#_

{display a string}
h,[display]W
{[display_ret]W
}h,[display_loop]W{
[display_ptr]Rr,
}h,[display_jmpadr]W{eeeeeeeee?
[display_ptr]RrP
[display_ptr]R,#1+,[display_ptr]W
#,}[display_loop]R,[load_value]W#,[code_load_R0]R?{?
}h,[display_end]W
[display_jmpadr]RH[display_end]R,[load_value]W#,[code_load_R0]R?
[display_end]RH{
#,[display_ret]R?}

{read a word}
h,[read_word]W
{[read_word_ret]W
}h,[read_word_loop]W{
G,[read_word_char]W
[read_word_char]R,#20-,}h,[read_word_jmpadr1]W{eeeeeeeee?
[read_word_char]R,#0A-,}h,[read_word_jmpadr2]W{eeeeeeeee?
[read_word_char]R,#0D-,}h,[read_word_jmpadr3]W{eeeeeeeee?
[read_word_char]R,[read_word_ptr]Rw,#1+,[read_word_ptr]W
#,}[read_word_loop]R,[load_value]W#,[code_load_R0]R?{?
}h,[read_word_end]W
[read_word_jmpadr1]RH[read_word_end]R,[load_value]W#,[code_load_R0]R?
[read_word_jmpadr2]RH[read_word_end]R,[load_value]W#,[code_load_R0]R?
[read_word_jmpadr3]RH[read_word_end]R,[load_value]W#,[code_load_R0]R?
[read_word_end]RH{
#,[read_word_ptr]Rw,#1+,[read_word_ptr]W
#,[read_word_ret]R?}

{copy string}
h,[strcpy]W
{[strcpy_ret]W
}h,[strcpy_loop]W{
[strcpy_src]Rr,[strcpy_dst]Rw
[strcpy_src]Rr,}h,[strcpy_jmpadr]W{eeeeeeeee?
[strcpy_src]R,#1+,[strcpy_src]W
[strcpy_dst]R,#1+,[strcpy_dst]W
#,}[strcpy_loop]R,[load_value]W#,[code_load_R0]R?{?
}h,[strcpy_end]W
[strcpy_jmpadr]RH[strcpy_end]R,[load_value]W#,[code_load_R0]R?
[strcpy_end]RH{
#,[strcpy_ret]R?}

{compare strings}
h,[strcmp]W
{[strcmp_ret]W
}h,[strcmp_loop]W{
[strcmp_ptr1]Rr,}h,[strcmp_jmpadr1]W{eeeeeeeee?
[strcmp_ptr2]Rr,}h,[strcmp_jmpadr2]W{eeeeeeeee?
[strcmp_ptr1]Rr,[strcmp_ptr2]Rr-,}h,[strcmp_jmpadr3]W{eeeeeeeee?
#1,[strcmp_result]W
#,}h,[strcmp_jmpadr4]W{eeeeeeeee?
}h,[strcmp_next]W
[strcmp_jmpadr3]RH[strcmp_next]R,[load_value]W#,[code_load_R0]R?
[strcmp_next]RH{
[strcmp_ptr1]R,#1+,[strcmp_ptr1]W
[strcmp_ptr2]R,#1+,[strcmp_ptr2]W
#,}[strcmp_loop]R,[load_value]W#,[code_load_R0]R?{?
}h,[strcmp_label2]W
[strcmp_jmpadr2]RH[strcmp_label2]R,[load_value]W#,[code_load_R0]R?
[strcmp_label2]RH{
#1,[strcmp_result]W
#,}h,[strcmp_jmpadr5]W{eeeeeeeee?
}h,[strcmp_label1]W
[strcmp_jmpadr1]RH[strcmp_label1]R,[load_value]W#,[code_load_R0]R?
[strcmp_label1]RH{
[strcmp_ptr2]Rr,}h,[strcmp_jmpadr6]W{eeeeeeeee?
#1,[strcmp_result]W
#,}h,[strcmp_jmpadr7]W{eeeeeeeee?
}h,[strcmp_label6]W
[strcmp_jmpadr6]RH[strcmp_label6]R,[load_value]W#,[code_load_R0]R?
[strcmp_label6]RH{
#,[strcmp_result]W
}h,[strcmp_end]W
[strcmp_jmpadr4]RH[strcmp_end]R,[load_value]W#,[code_load_R0]R?
[strcmp_jmpadr5]RH[strcmp_end]R,[load_value]W#,[code_load_R0]R?
[strcmp_jmpadr7]RH[strcmp_end]R,[load_value]W#,[code_load_R0]R?
[strcmp_end]RH{
#,[strcmp_ret]R?}

{find or create word in dictionary}
h,[search_dic]W
{[search_dic_ret]W
}h,[search_dic_loop]W{
[search_dic_ptr]RR,}h,[search_dic_jmpadr1]W{eeeeeeeee?
[search_dic_ptr]RR,[strcmp_ptr1]W
[search_dic_key]R,[strcmp_ptr2]W
#,[strcmp]R?
[strcmp_result]R,}h,[search_dic_jmpadr2]W{eeeeeeeee?
[search_dic_ptr]R,#8+,[search_dic_ptr]W
#,}[search_dic_loop]R,[load_value]W#,[code_load_R0]R?{?
}h,[search_dic_end]W
[search_dic_jmpadr1]RH[search_dic_end]R,[load_value]W#,[code_load_R0]R?
[search_dic_end]RH{
[search_dic_ptr]R,#4+R,[search_dic_ptr]RW
[search_dic_key]R,[strcpy_src]W
[search_dic_ptr]RR,[strcpy_dst]W
#,[strcpy]R?
[search_dic_ptr]R,#C+,[search_dic_adr]W
[strcpy_dst]R,#1+,[search_dic_adr]RW
[search_dic_ptr]R,#8+,[search_dic_adr]W
#,[search_dic_adr]RW
}h,[search_dic_found]W
[search_dic_jmpadr2]RH[search_dic_found]R,[load_value]W#,[code_load_R0]R?
[search_dic_found]RH{
#,[search_dic_ret]R?}

{initial dictionary at address 3000 hex}
#,#3000W
#4000,#3004W

{print hexadecimal}
h,[print_hex]W
{[print_hex_ret]W
#1C,[print_hex_nbr]R>,#F&,[digits]R+rP
#18,[print_hex_nbr]R>,#F&,[digits]R+rP
#14,[print_hex_nbr]R>,#F&,[digits]R+rP
#10,[print_hex_nbr]R>,#F&,[digits]R+rP
#C,[print_hex_nbr]R>,#F&,[digits]R+rP
#8,[print_hex_nbr]R>,#F&,[digits]R+rP
#4,[print_hex_nbr]R>,#F&,[digits]R+rP
[print_hex_nbr]R,#F&,[digits]R+rP
#,[print_hex_ret]R?}

h,[txt_equal]W
{strings are equal
}#_

h,[txt_diff]W
{strings are different
}#_

{main function}
h,[main]W
{[main_ret]W
#12345678,[print_hex_nbr]W
#,[print_hex]R?
[hello]R,[display_ptr]W
#,[display]R?
#2000,[read_word_ptr]W
#,[read_word]R?
#2000,[display_ptr]W
#,[display]R?
#2000,[strcpy_src]W
#2100,[strcpy_dst]W
#,[strcpy]R?
#2100,[display_ptr]W
#,[display]R?
#2200,[read_word_ptr]W
#,#[read_word]R?
#2000,[strcmp_ptr1]W
#2200,[strcmp_ptr2]W
#,[strcmp]R?
[strcmp_result]R,}h,[main_jmpadr1]W{eeeeeeeee?
[txt_diff]R,[display_ptr]W
#,[display]R?
#,}h,[main_jmpadr2]W{eeeeeeeee?
}h,[main_equal]W
[main_jmpadr1]RH[main_equal]R,[load_value]W#,[code_load_R0]R?
[main_equal]RH{
[txt_equal]R,[display_ptr]W
#,[display]R?
}h,[main_endcmp]W
[main_jmpadr2]RH[main_endcmp]R,[load_value]W#,[code_load_R0]R?
[main_endcmp]RH{
#2300,[read_word_ptr]W
#,#[read_word]R?
#3000,[search_dic_ptr]W
#2300,[search_dic_key]W
#,[search_dic]R?
[search_dic_ptr]R,[print_hex_nbr]W
#,[print_hex]R?
#2400,[read_word_ptr]W
#,#[read_word]R?
#3000,[search_dic_ptr]W
#2400,[search_dic_key]W
#,[search_dic]R?
[search_dic_ptr]R,[print_hex_nbr]W
#,[print_hex]R?
#,[main_ret]R?}

{call main function}
#,[main]R?
Q
